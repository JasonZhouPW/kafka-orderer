// Code generated by protoc-gen-go.
// source: ab.proto
// DO NOT EDIT!

/*
Package ab is a generated protocol buffer package.

It is generated from these files:
	ab.proto

It has these top-level messages:
	BroadcastReply
	Message
	Properties
	Acknowledgement
	Update
	Block
	BlockReply
*/
package ab

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// These status codes are intended to resemble selected HTTP status codes
type Status int32

const (
	Status_SUCCESS             Status = 0
	Status_BAD_REQUEST         Status = 400
	Status_FORBIDDEN           Status = 403
	Status_NOT_FOUND           Status = 404
	Status_SERVICE_UNAVAILABLE Status = 503
)

var Status_name = map[int32]string{
	0:   "SUCCESS",
	400: "BAD_REQUEST",
	403: "FORBIDDEN",
	404: "NOT_FOUND",
	503: "SERVICE_UNAVAILABLE",
}
var Status_value = map[string]int32{
	"SUCCESS":             0,
	"BAD_REQUEST":         400,
	"FORBIDDEN":           403,
	"NOT_FOUND":           404,
	"SERVICE_UNAVAILABLE": 503,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// Start may be specified to a specific block number, or may be request from the newest or oldest available
type Properties_Start int32

const (
	Properties_NEWEST    Properties_Start = 0
	Properties_OLDEST    Properties_Start = 1
	Properties_SPECIFIED Properties_Start = 2
)

var Properties_Start_name = map[int32]string{
	0: "NEWEST",
	1: "OLDEST",
	2: "SPECIFIED",
}
var Properties_Start_value = map[string]int32{
	"NEWEST":    0,
	"OLDEST":    1,
	"SPECIFIED": 2,
}

func (x Properties_Start) String() string {
	return proto.EnumName(Properties_Start_name, int32(x))
}
func (Properties_Start) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type BroadcastReply struct {
	Status Status `protobuf:"varint,1,opt,name=status,enum=ab.Status" json:"status,omitempty"`
}

func (m *BroadcastReply) Reset()                    { *m = BroadcastReply{} }
func (m *BroadcastReply) String() string            { return proto.CompactTextString(m) }
func (*BroadcastReply) ProtoMessage()               {}
func (*BroadcastReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Message struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Properties struct {
	Start           Properties_Start `protobuf:"varint,1,opt,name=start,enum=ab.Properties_Start" json:"start,omitempty"`
	SpecifiedNumber uint64           `protobuf:"varint,2,opt,name=specified_number,json=specifiedNumber" json:"specified_number,omitempty"`
	WindowSize      uint64           `protobuf:"varint,3,opt,name=window_size,json=windowSize" json:"window_size,omitempty"`
}

func (m *Properties) Reset()                    { *m = Properties{} }
func (m *Properties) String() string            { return proto.CompactTextString(m) }
func (*Properties) ProtoMessage()               {}
func (*Properties) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type Acknowledgement struct {
	Number uint64 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *Acknowledgement) Reset()                    { *m = Acknowledgement{} }
func (m *Acknowledgement) String() string            { return proto.CompactTextString(m) }
func (*Acknowledgement) ProtoMessage()               {}
func (*Acknowledgement) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Update struct {
	Acknowledgement *Acknowledgement `protobuf:"bytes,1,opt,name=acknowledgement" json:"acknowledgement,omitempty"`
	NewProperties   *Properties      `protobuf:"bytes,2,opt,name=new_properties,json=newProperties" json:"new_properties,omitempty"`
}

func (m *Update) Reset()                    { *m = Update{} }
func (m *Update) String() string            { return proto.CompactTextString(m) }
func (*Update) ProtoMessage()               {}
func (*Update) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Update) GetAcknowledgement() *Acknowledgement {
	if m != nil {
		return m.Acknowledgement
	}
	return nil
}

func (m *Update) GetNewProperties() *Properties {
	if m != nil {
		return m.NewProperties
	}
	return nil
}

type Block struct {
	Number   uint64     `protobuf:"varint,2,opt,name=number" json:"number,omitempty"`
	PrevHash []byte     `protobuf:"bytes,3,opt,name=prev_hash,json=prevHash,proto3" json:"prev_hash,omitempty"`
	Proof    []byte     `protobuf:"bytes,4,opt,name=proof,proto3" json:"proof,omitempty"`
	Messages []*Message `protobuf:"bytes,5,rep,name=messages" json:"messages,omitempty"`
}

func (m *Block) Reset()                    { *m = Block{} }
func (m *Block) String() string            { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()               {}
func (*Block) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Block) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type BlockReply struct {
	Status Status `protobuf:"varint,1,opt,name=status,enum=ab.Status" json:"status,omitempty"`
	Block  *Block `protobuf:"bytes,2,opt,name=block" json:"block,omitempty"`
}

func (m *BlockReply) Reset()                    { *m = BlockReply{} }
func (m *BlockReply) String() string            { return proto.CompactTextString(m) }
func (*BlockReply) ProtoMessage()               {}
func (*BlockReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BlockReply) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

func init() {
	proto.RegisterType((*BroadcastReply)(nil), "ab.broadcast_reply")
	proto.RegisterType((*Message)(nil), "ab.message")
	proto.RegisterType((*Properties)(nil), "ab.properties")
	proto.RegisterType((*Acknowledgement)(nil), "ab.acknowledgement")
	proto.RegisterType((*Update)(nil), "ab.update")
	proto.RegisterType((*Block)(nil), "ab.block")
	proto.RegisterType((*BlockReply)(nil), "ab.block_reply")
	proto.RegisterEnum("ab.Status", Status_name, Status_value)
	proto.RegisterEnum("ab.Properties_Start", Properties_Start_name, Properties_Start_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for AtomicBroadcast service

type AtomicBroadcastClient interface {
	// broadcast receives a reply of acknowledgement for each message in order, indicating success or type of failure
	Broadcast(ctx context.Context, opts ...grpc.CallOption) (AtomicBroadcast_BroadcastClient, error)
	// deliver first requires an update containing a properties message, then a stream of block replies is received.
	// only as many blocks will be sent as specified in the properties window_size, until an acknowledgement update is received, advancing the window
	Deliver(ctx context.Context, opts ...grpc.CallOption) (AtomicBroadcast_DeliverClient, error)
}

type atomicBroadcastClient struct {
	cc *grpc.ClientConn
}

func NewAtomicBroadcastClient(cc *grpc.ClientConn) AtomicBroadcastClient {
	return &atomicBroadcastClient{cc}
}

func (c *atomicBroadcastClient) Broadcast(ctx context.Context, opts ...grpc.CallOption) (AtomicBroadcast_BroadcastClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AtomicBroadcast_serviceDesc.Streams[0], c.cc, "/ab.atomic_broadcast/broadcast", opts...)
	if err != nil {
		return nil, err
	}
	x := &atomicBroadcastBroadcastClient{stream}
	return x, nil
}

type AtomicBroadcast_BroadcastClient interface {
	Send(*Message) error
	Recv() (*BroadcastReply, error)
	grpc.ClientStream
}

type atomicBroadcastBroadcastClient struct {
	grpc.ClientStream
}

func (x *atomicBroadcastBroadcastClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *atomicBroadcastBroadcastClient) Recv() (*BroadcastReply, error) {
	m := new(BroadcastReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *atomicBroadcastClient) Deliver(ctx context.Context, opts ...grpc.CallOption) (AtomicBroadcast_DeliverClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_AtomicBroadcast_serviceDesc.Streams[1], c.cc, "/ab.atomic_broadcast/deliver", opts...)
	if err != nil {
		return nil, err
	}
	x := &atomicBroadcastDeliverClient{stream}
	return x, nil
}

type AtomicBroadcast_DeliverClient interface {
	Send(*Update) error
	Recv() (*BlockReply, error)
	grpc.ClientStream
}

type atomicBroadcastDeliverClient struct {
	grpc.ClientStream
}

func (x *atomicBroadcastDeliverClient) Send(m *Update) error {
	return x.ClientStream.SendMsg(m)
}

func (x *atomicBroadcastDeliverClient) Recv() (*BlockReply, error) {
	m := new(BlockReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for AtomicBroadcast service

type AtomicBroadcastServer interface {
	// broadcast receives a reply of acknowledgement for each message in order, indicating success or type of failure
	Broadcast(AtomicBroadcast_BroadcastServer) error
	// deliver first requires an update containing a properties message, then a stream of block replies is received.
	// only as many blocks will be sent as specified in the properties window_size, until an acknowledgement update is received, advancing the window
	Deliver(AtomicBroadcast_DeliverServer) error
}

func RegisterAtomicBroadcastServer(s *grpc.Server, srv AtomicBroadcastServer) {
	s.RegisterService(&_AtomicBroadcast_serviceDesc, srv)
}

func _AtomicBroadcast_Broadcast_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AtomicBroadcastServer).Broadcast(&atomicBroadcastBroadcastServer{stream})
}

type AtomicBroadcast_BroadcastServer interface {
	Send(*BroadcastReply) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type atomicBroadcastBroadcastServer struct {
	grpc.ServerStream
}

func (x *atomicBroadcastBroadcastServer) Send(m *BroadcastReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *atomicBroadcastBroadcastServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _AtomicBroadcast_Deliver_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AtomicBroadcastServer).Deliver(&atomicBroadcastDeliverServer{stream})
}

type AtomicBroadcast_DeliverServer interface {
	Send(*BlockReply) error
	Recv() (*Update, error)
	grpc.ServerStream
}

type atomicBroadcastDeliverServer struct {
	grpc.ServerStream
}

func (x *atomicBroadcastDeliverServer) Send(m *BlockReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *atomicBroadcastDeliverServer) Recv() (*Update, error) {
	m := new(Update)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _AtomicBroadcast_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ab.atomic_broadcast",
	HandlerType: (*AtomicBroadcastServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "broadcast",
			Handler:       _AtomicBroadcast_Broadcast_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "deliver",
			Handler:       _AtomicBroadcast_Deliver_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("ab.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0x5f, 0x6b, 0xdb, 0x3e,
	0x14, 0xad, 0xf3, 0xc7, 0x49, 0xae, 0xdb, 0xc4, 0xa8, 0xe5, 0x87, 0xe9, 0x8f, 0xb1, 0xa2, 0x97,
	0xb5, 0x65, 0x84, 0x91, 0xd2, 0xc7, 0x3d, 0x24, 0xb1, 0xc2, 0x02, 0xc1, 0xe9, 0xe4, 0xa6, 0x7b,
	0x34, 0x72, 0xac, 0xb6, 0xa6, 0x49, 0x6c, 0x2c, 0xa5, 0x61, 0x1b, 0xec, 0x33, 0x0c, 0xb6, 0x8f,
	0xb2, 0xef, 0xb6, 0xd7, 0xc9, 0xb2, 0x49, 0xb3, 0xf6, 0x65, 0x6f, 0xba, 0xe7, 0x9e, 0x7b, 0x75,
	0xce, 0xbd, 0x12, 0x34, 0x59, 0xd8, 0x4d, 0xb3, 0x44, 0x26, 0xa8, 0xc2, 0x42, 0x7c, 0x09, 0x9d,
	0x30, 0x4b, 0x58, 0x34, 0x67, 0x42, 0x06, 0x19, 0x4f, 0x17, 0x9f, 0x11, 0x06, 0x53, 0x48, 0x26,
	0xd7, 0xc2, 0x31, 0x4e, 0x8c, 0xd3, 0x76, 0x0f, 0xba, 0xaa, 0xc2, 0xd7, 0x08, 0x2d, 0x33, 0xf8,
	0x15, 0x34, 0x96, 0x5c, 0x08, 0x76, 0xc7, 0x11, 0x82, 0x5a, 0xc4, 0x24, 0xd3, 0xe4, 0x7d, 0xaa,
	0xcf, 0xf8, 0x97, 0x01, 0xa0, 0xee, 0x48, 0x79, 0x26, 0x63, 0x2e, 0xd0, 0x39, 0xd4, 0x55, 0x5d,
	0x26, 0xcb, 0x86, 0x47, 0xdd, 0x42, 0x42, 0x99, 0xce, 0x7b, 0x67, 0x92, 0x16, 0x14, 0x74, 0x06,
	0xb6, 0x48, 0xf9, 0x3c, 0xbe, 0x8d, 0x79, 0x14, 0xac, 0xd6, 0xcb, 0x90, 0x67, 0x4e, 0x45, 0x95,
	0xd5, 0x68, 0x67, 0x8b, 0x7b, 0x1a, 0x46, 0xaf, 0xc1, 0xda, 0xc4, 0xab, 0x28, 0xd9, 0x04, 0x22,
	0xfe, 0xc2, 0x9d, 0xaa, 0x66, 0x41, 0x01, 0xf9, 0x0a, 0xc1, 0x5d, 0xa8, 0xeb, 0xde, 0x08, 0xc0,
	0xf4, 0xc8, 0x27, 0xe2, 0x5f, 0xdb, 0x7b, 0xf9, 0x79, 0x3a, 0x71, 0xf3, 0xb3, 0x81, 0x0e, 0xa0,
	0xe5, 0x5f, 0x91, 0xe1, 0x78, 0x34, 0x26, 0xae, 0x5d, 0xc1, 0x67, 0xd0, 0x61, 0xf3, 0x87, 0x55,
	0xb2, 0x59, 0xf0, 0xe8, 0x8e, 0x2f, 0xf9, 0x4a, 0xa2, 0xff, 0xc0, 0x2c, 0x45, 0x18, 0xba, 0x7d,
	0x19, 0xe1, 0x6f, 0x60, 0xae, 0x53, 0xe5, 0x95, 0xa3, 0xf7, 0x2f, 0x8a, 0x34, 0xd5, 0xea, 0x1d,
	0xe6, 0x36, 0x9f, 0xa5, 0xe8, 0x8b, 0x0b, 0x2e, 0xa1, 0xbd, 0xe2, 0x9b, 0xe0, 0x69, 0x1c, 0xda,
	0xad, 0xd5, 0x6b, 0xff, 0x3d, 0x24, 0x7a, 0xa0, 0x58, 0x57, 0xdb, 0x10, 0x7f, 0x85, 0x7a, 0xb8,
	0x48, 0xe6, 0x0f, 0x3b, 0x02, 0x2b, 0xbb, 0x02, 0xd1, 0xff, 0xd0, 0x4a, 0x33, 0xfe, 0x18, 0xdc,
	0x33, 0x71, 0xaf, 0x47, 0xb3, 0x4f, 0x9b, 0x39, 0xf0, 0x41, 0xc5, 0xe8, 0x08, 0xea, 0xaa, 0x75,
	0x72, 0xeb, 0xd4, 0x74, 0xa2, 0x08, 0xd0, 0x1b, 0x68, 0x96, 0x4b, 0x15, 0x4e, 0xfd, 0xa4, 0xaa,
	0x44, 0x58, 0xb9, 0x88, 0x12, 0xa3, 0xdb, 0x24, 0xa6, 0x60, 0xe9, 0xcb, 0xff, 0xfd, 0xc1, 0xa8,
	0x5d, 0x15, 0x7a, 0x4b, 0x77, 0xad, 0x9c, 0xa2, 0x01, 0x5a, 0xe0, 0xe7, 0x0c, 0xcc, 0xa2, 0x04,
	0x59, 0xd0, 0xf0, 0x67, 0xc3, 0x21, 0xf1, 0x7d, 0xb5, 0x2d, 0x1b, 0xac, 0x41, 0xdf, 0x0d, 0x28,
	0xf9, 0x38, 0xcb, 0x57, 0xf6, 0xbd, 0x8a, 0xda, 0xd0, 0x1a, 0x4d, 0xe9, 0x60, 0xec, 0xba, 0xc4,
	0xb3, 0x7f, 0xe8, 0xd8, 0x9b, 0x5e, 0x07, 0xa3, 0xe9, 0xcc, 0x73, 0xed, 0x9f, 0x55, 0xe4, 0xc0,
	0xa1, 0x4f, 0xe8, 0xcd, 0x78, 0x48, 0x82, 0x99, 0xd7, 0xbf, 0xe9, 0x8f, 0x27, 0xfd, 0xc1, 0x84,
	0xd8, 0xbf, 0xab, 0xbd, 0x35, 0xd8, 0x4c, 0x26, 0xcb, 0x78, 0x1e, 0x6c, 0x9f, 0x3c, 0xba, 0x80,
	0xd6, 0x53, 0xb0, 0x6b, 0xf7, 0x58, 0xaf, 0xef, 0xd9, 0xdf, 0xc0, 0x7b, 0xa7, 0xc6, 0x3b, 0x03,
	0xbd, 0x85, 0x46, 0xc4, 0x17, 0xf1, 0xa3, 0x1a, 0xb3, 0xf6, 0x5a, 0xbc, 0x84, 0xe3, 0xce, 0xd6,
	0xd4, 0x2e, 0x3b, 0x34, 0xf5, 0x6f, 0xbb, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x79, 0x1c, 0x33,
	0x3a, 0x79, 0x03, 0x00, 0x00,
}
